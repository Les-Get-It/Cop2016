<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="MSRDCGroups.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA+wAAAAIB
        AAAAAQAAAAAkAAAANDM0NzhkNzUtNzhlMC0xMWNmLThlNzgtMDBhMGQxMDAwMzhlAAAAAMIAAAAhQzQS
        CAAAADwXAACQAgAA4Oc75AAABgAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAwAAAAEAAAAeAAAA
        ZAAAAA8AAAAAAAAAAAAAAP////8PAAAABQAAgAgAAID/////BwAAAEMATwBQADIAMAAwADEAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAGAAAATQBTAFIARABDADEAA1LjC5GPzhGd4wCqAEu4UQEAAACQAURCAQANTVMg
        U2FucyBTZXJpZgs=
</value>
  </data>
  <data name="dbgGroups.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        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
        AAAAAwAABAAAAMgEAAAAAAAAABoACAQAAACEBAAAAAAAAAAaAAgNAAAAAAAAAAcAAABTcGxpdDAABQAA
        AAsAAABBbGxvd0ZvY3VzAA8AAAAPAAAAQWxsb3dSb3dTaXppbmcABAAAAAwAAABBbGxvd1NpemluZwAB
        AAAABwAAAExvY2tlZAAfAAAADQAAAE1hcnF1ZWVTdHlsZQAQAAAAEAAAAFJlY29yZFNlbGVjdG9ycwAR
        AAAACwAAAFNjcm9sbEJhcnMAAwAAAAwAAABTY3JvbGxHcm91cAAGAAAABQAAAFNpemUABwAAAAkAAABT
        aXplTW9kZQADAgAADQAAAF9Db2x1bW5Qcm9wcwAGAgAACwAAAF9Vc2VyRmxhZ3MAAAALAAAAAAAAAAsA
        AAAAAAAACwAAAAAAAAADAAAAAQAAAAMAAAABAAAACwAAAP//AAADAAAAAAAAAAQAAAAAAAAACwAAAP//
        AABGAAAAKAAAAANS4wuRj84RneMAqgBLuFEBAAAAkAGwMAEADU1TIFNhbnMgU2VyaWYEAAAAAACAPwsA
        AAD//wAAAgAAAAIAAAADAAAABQAAgAMAAAAIAACAHgAAAAEAAAAAAAAARgAAACgAAAADUuMLkY/OEZ3j
        AKoAS7hRAQAAAJABsDABAA1NUyBTYW5zIFNlcmlmCwAAAAAAAAALAAAAAAAAAAMAAAAAAAAACwAAAAAA
        AAAdAAAAAAAAAAoAAABkYmdHcm91cHMAAgAAAAwAAABBbGxvd0FkZE5ldwAvAAAADAAAAEFsbG93QXJy
        b3dzAAEAAAAMAAAAQWxsb3dEZWxldGUABAAAAAwAAABBbGxvd1VwZGF0ZQD4/f//CwAAAEFwcGVhcmFu
        Y2UAC/7//woAAABCYWNrQ29sb3IACP7//wwAAABCb3JkZXJTdHlsZQD6/f//CAAAAENhcHRpb24ABwAA
        AA4AAABDb2x1bW5IZWFkZXJzAAgAAAAIAAAAQ29sdW1ucwAlAAAACQAAAERhdGFNb2RlAAoAAAAMAAAA
        RGVmQ29sV2lkdGgA/v3//wgAAABFbmFibGVkAAD+//8FAAAARm9udAD//f//CgAAAEZvcmVDb2xvcgAL
        AAAACQAAAEhlYWRGb250AAwAAAAKAAAASGVhZExpbmVzAEoAAAAOAAAATWFycXVlZVVuaXF1ZQAPAAAA
        EAAAAFJvd0RpdmlkZXJTdHlsZQAjAAAABwAAAFNwbGl0cwAxAAAAEAAAAFRhYkFjcm9zc1NwbGl0cwAy
        AAAACgAAAFRhYkFjdGlvbgAzAAAAEAAAAFdyYXBDZWxsUG9pbnRlcgDTBwAACQAAAF9FeHRlbnRYANQH
        AAAJAAAAX0V4dGVudFkAAAIAAAwAAABfTGF5b3V0VHlwZQAQAAAACwAAAF9Sb3dIZWlnaHQA1wcAAAkA
        AABfVmVyc2lvbgAL
</value>
  </data>
</root>