<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="rdcLookupTableList.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAABQEAAAIB
        AAAAAQAAAAAkAAAANDM0NzhkNzUtNzhlMC0xMWNmLThlNzgtMDBhMGQxMDAwMzhlAAAAAMwAAAAhQzQS
        CAAAAJsSAAA8AgAA4Oc75AAABgAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAwAAAAEAAAAeAAAA
        ZAAAAA8AAAAAAAAAAAAAAP////8PAAAABQAAgAgAAID//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        EgAAAHIAZABjAEwAbwBvAGsAdQBwAFQAYQBiAGwAZQBMAGkAcwB0AANS4wuRj84RneMAqgBLuFEBAAAA
        kAFEQgEADU1TIFNhbnMgU2VyaWYL
</value>
  </data>
  <data name="rdcLookupList.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAA+wAAAAIB
        AAAAAQAAAAAkAAAANDM0NzhkNzUtNzhlMC0xMWNmLThlNzgtMDBhMGQxMDAwMzhlAAAAAMIAAAAhQzQS
        CAAAAJsSAAA8AgAA4Oc75AAABgAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAwAAAAEAAAAeAAAA
        ZAAAAA8AAAAAAAAAAAAAAP////8PAAAABQAAgAgAAID//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        DQAAAHIAZABjAEwAbwBvAGsAdQBwAEwAaQBzAHQAA1LjC5GPzhGd4wCqAEu4UQEAAACQAURCAQANTVMg
        U2FucyBTZXJpZgs=
</value>
  </data>
  <data name="dbgLookupList.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        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
        AABTcGxpdDAABQAAAAsAAABBbGxvd0ZvY3VzAA8AAAAPAAAAQWxsb3dSb3dTaXppbmcABAAAAAwAAABB
        bGxvd1NpemluZwABAAAABwAAAExvY2tlZAAfAAAADQAAAE1hcnF1ZWVTdHlsZQAQAAAAEAAAAFJlY29y
        ZFNlbGVjdG9ycwARAAAACwAAAFNjcm9sbEJhcnMAAwAAAAwAAABTY3JvbGxHcm91cAAGAAAABQAAAFNp
        emUABwAAAAkAAABTaXplTW9kZQADAgAADQAAAF9Db2x1bW5Qcm9wcwAGAgAACwAAAF9Vc2VyRmxhZ3MA
        AAALAAAAAAAAAAsAAAAAAAAACwAAAAAAAAADAAAAAQAAAAMAAAABAAAACwAAAP//AAADAAAAAAAAAAQA
        AAAAAAAACwAAAP//AABGAAAAKAAAAANS4wuRj84RneMAqgBLuFEBAAAAkAGwMAEADU1TIFNhbnMgU2Vy
        aWYEAAAAAACAPwsAAAD//wAAAgAAAAIAAAADAAAABQAAgAMAAAAIAACAHgAAAAEAAAAAAAAARgAAACgA
        AAADUuMLkY/OEZ3jAKoAS7hRAQAAAJABsDABAA1NUyBTYW5zIFNlcmlmCwAAAP//AAALAAAAAAAAAAMA
        AAAAAAAACwAAAAAAAAAdAAAAAAAAAA4AAABkYmdMb29rdXBMaXN0AAIAAAAMAAAAQWxsb3dBZGROZXcA
        LwAAAAwAAABBbGxvd0Fycm93cwABAAAADAAAAEFsbG93RGVsZXRlAAQAAAAMAAAAQWxsb3dVcGRhdGUA
        +P3//wsAAABBcHBlYXJhbmNlAAv+//8KAAAAQmFja0NvbG9yAAj+//8MAAAAQm9yZGVyU3R5bGUA+v3/
        /wgAAABDYXB0aW9uAAcAAAAOAAAAQ29sdW1uSGVhZGVycwAIAAAACAAAAENvbHVtbnMAJQAAAAkAAABE
        YXRhTW9kZQAKAAAADAAAAERlZkNvbFdpZHRoAP79//8IAAAARW5hYmxlZAAA/v//BQAAAEZvbnQA//3/
        /woAAABGb3JlQ29sb3IACwAAAAkAAABIZWFkRm9udAAMAAAACgAAAEhlYWRMaW5lcwBKAAAADgAAAE1h
        cnF1ZWVVbmlxdWUADwAAABAAAABSb3dEaXZpZGVyU3R5bGUAIwAAAAcAAABTcGxpdHMAMQAAABAAAABU
        YWJBY3Jvc3NTcGxpdHMAMgAAAAoAAABUYWJBY3Rpb24AMwAAABAAAABXcmFwQ2VsbFBvaW50ZXIA0wcA
        AAkAAABfRXh0ZW50WADUBwAACQAAAF9FeHRlbnRZAAACAAAMAAAAX0xheW91dFR5cGUAEAAAAAsAAABf
        Um93SGVpZ2h0ANcHAAAJAAAAX1ZlcnNpb24ACw==
</value>
  </data>
</root>