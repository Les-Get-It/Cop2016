
// This file is used by Code Analysis to maintain SuppressMessage 
// attributes that are applied to this project.
// Project-level suppressions either have no target or are given 
// a specific target and scoped to a namespace, type, member, etc.

[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_cn")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_selecteddatabasename")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_sql")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_selecteddatabase")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_Action")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_ANDOR")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_rs")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_en")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_resp")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SelectedDirectory")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SelectedFileWithPath")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SelectedFileName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SubmitGroupID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SubmitRowID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_SubmitColID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_State")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_importsetupid")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_status")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_Username")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_password")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_connectionstatus")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_g")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modGlobal.gv_strDBName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.DALcop.errorMessage")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.DALcop.errorMessage")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modDBSetup.FindMaxRecID(System.String,System.String)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modDBSetup")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modDocumentation")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modDocumentation.PrintSummaryValidation")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modDocumentation.PrintTableValidation(System.Object@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modDocumentation.PrintTableValCriteria(System.Object@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modGlobal")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("TypeFileNameMismatch", "JustCode_CSharp_InnerTypeFileNameMismatch:Inner types not matching file names", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modGlobal.SelectedMeasureField")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.GetLastID(System.String@)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.GetMaxValue(System.String@,System.String@,System.String@)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.CheckForErrors")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.ConvertApastroph(System.String@)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.ConnectToDatabase")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.ConvertDoubleQuote(System.String@)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.RemoveCrLfFromString(System.String)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.UpdateVerificationCriteriaTitle(System.Object@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.ImportCMSSetup")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSFieldMeasures(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSParentCD(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSParentFieldMeasures(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSParentAnswerCriteria(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSParentAnswerCriteriaSet(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSFieldMeasureCriteria(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modGlobal.InsertCMSFieldMeasureCriteriaSet(System.String@,System.DateTime@)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.id_CoefPeriod")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.DataDef.DDID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.DataDef.basetableid")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("TypeFileNameMismatch", "JustCode_CSharp_InnerTypeFileNameMismatch:Inner types not matching file names", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.DataDef")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.MSA_OPENFILENAME")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("TypeFileNameMismatch", "JustCode_CSharp_InnerTypeFileNameMismatch:Inner types not matching file names", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.MSA_OPENFILENAME")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.ALLFILES")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.OPENFILENAME")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("TypeFileNameMismatch", "JustCode_CSharp_InnerTypeFileNameMismatch:Inner types not matching file names", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.OPENFILENAME")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("TypeFileNameMismatch", "JustCode_CSharp_InnerTypeFileNameMismatch:Inner types not matching file names", Justification = "<Pending>", Scope = "type", Target = "~T:COP2001.modImportForCoreMeasVerify.CriteriaStep")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.CriteriaStep.SQL")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.CriteriaStep.CAT")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.CriteriaStep.CAT_TYPE")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_CaseIDName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_CaseIDName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_PMSIName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_PMSIName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_BatchNoName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.is_BatchNoName")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.LinkedFields")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.ib_CreateNewSavedGroupLogic")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.ib_CreateNewSavedGroupLogic")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Field", "JustCode_FieldCanBeMadeReadonly:Field declaration can be made readonly", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.li_VerifyID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~F:COP2001.modImportForCoreMeasVerify.li_VerifyID")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.ImportMeasureRecs(System.Int32@,System.DateTime,System.DateTime,System.String,System.Int16)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.ImportMeasureRecs(System.Int32@,System.DateTime,System.DateTime,System.String,System.Int16)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Variable", "JustCode_ImplicitTypedVariableDeclarationMisused:Not implicitly typed local variable", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.ImportMeasureRecs(System.Int32@,System.DateTime,System.DateTime,System.String,System.Int16)")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.LookupLocationOnDDID(System.String@)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.LookupLocationOnDDID(System.String@)~System.Int32")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.VerifyPatRecs(System.Int32,System.Int32)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.VerifyPatRecs(System.Int32,System.Int32)~System.String")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.GetMultipleSelectionDDID(System.Int32@)~System.Int32[]")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Naming", "JustCode_NamingConventions:Naming conventions inconsistency", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.GetMultipleSelectionDDID(System.Int32@)~System.Array")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.modImportForCoreMeasVerify.GetMultipleSelectionDDID(System.Int32@)~System.Array")]
[assembly: System.Diagnostics.CodeAnalysis.SuppressMessage("Arguments", "JustCode_LiteralArgumentIsNotNamedDiagnostic:The used literal argument is not named", Justification = "<Pending>", Scope = "member", Target = "~M:COP2001.UpdateSetup.UpdateSystemSetup")]

