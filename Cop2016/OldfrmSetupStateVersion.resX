<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ToolTip1.Location" type="System.Drawing.Point, System.Drawing">
    <value>17, 17</value>
  </data>
  <data name="rdcVersionHistory.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj0yLjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACFTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5BeEhvc3QrU3RhdGUBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAAwEAAAIB
        AAAAAQAAAAAkAAAANDM0NzhkNzUtNzhlMC0xMWNmLThlNzgtMDBhMGQxMDAwMzhlAAAAAMoAAAAhQzQS
        CAAAAJMLAAB7AgAA4Oc75AAABgAAAAAAAAAAAAAAAAAAAAAAAQAAAAMAAAAAAAAAAwAAAAEAAAAeAAAA
        ZAAAAA8AAAAAAAAAAAAAAP////8PAAAABQAAgAgAAID//wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        EQAAAHIAZABjAFYAZQByAHMAaQBvAG4ASABpAHMAdABvAHIAeQADUuMLkY/OEZ3jAKoAS7hRAQAAAJAB
        REIBAA1NUyBTYW5zIFNlcmlmCw==
</value>
  </data>
  <data name="dbgVersionHistory.OcxState" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        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
        AIADAAAACAAAgB4AAAABAAAAAAAAAEYAAAAoAAAAA1LjC5GPzhGd4wCqAEu4UQEAAACQAbAwAQANTVMg
        U2FucyBTZXJpZgsAAAD//wAACwAAAAAAAAADAAAAAAAAAAsAAAAAAAAAHQAAAAAAAAASAAAAZGJnVmVy
        c2lvbkhpc3RvcnkAAgAAAAwAAABBbGxvd0FkZE5ldwAvAAAADAAAAEFsbG93QXJyb3dzAAEAAAAMAAAA
        QWxsb3dEZWxldGUABAAAAAwAAABBbGxvd1VwZGF0ZQD4/f//CwAAAEFwcGVhcmFuY2UAC/7//woAAABC
        YWNrQ29sb3IACP7//wwAAABCb3JkZXJTdHlsZQD6/f//CAAAAENhcHRpb24ABwAAAA4AAABDb2x1bW5I
        ZWFkZXJzAAgAAAAIAAAAQ29sdW1ucwAlAAAACQAAAERhdGFNb2RlAAoAAAAMAAAARGVmQ29sV2lkdGgA
        /v3//wgAAABFbmFibGVkAAD+//8FAAAARm9udAD//f//CgAAAEZvcmVDb2xvcgALAAAACQAAAEhlYWRG
        b250AAwAAAAKAAAASGVhZExpbmVzAEoAAAAOAAAATWFycXVlZVVuaXF1ZQAPAAAAEAAAAFJvd0Rpdmlk
        ZXJTdHlsZQAjAAAABwAAAFNwbGl0cwAxAAAAEAAAAFRhYkFjcm9zc1NwbGl0cwAyAAAACgAAAFRhYkFj
        dGlvbgAzAAAAEAAAAFdyYXBDZWxsUG9pbnRlcgDTBwAACQAAAF9FeHRlbnRYANQHAAAJAAAAX0V4dGVu
        dFkAAAIAAAwAAABfTGF5b3V0VHlwZQAQAAAACwAAAF9Sb3dIZWlnaHQA1wcAAAkAAABfVmVyc2lvbgAL
</value>
  </data>
</root>